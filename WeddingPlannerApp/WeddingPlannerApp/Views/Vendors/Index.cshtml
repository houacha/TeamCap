@model IEnumerable<WeddingPlannerApp.Models.VendorViewModel>

<div class="autoElement01" align="center">
    <p class="superHeaderText">@ViewBag.VenderType</p>
</div>

@switch (ViewBag.VenderType)
{
    case "Venues":


        @*@*@foreach (var item in Model)
        {
            <a href="@Url.Action($"Details", new { id = item.Id, type = item.VendorType })">
                <div class="autoElement02" align="center">
                    <p class="tinyText">
                        @Html.DisplayFor(modelItem => item.VendorType)
                    </p>
                    <p class="headerText">
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Street)<br />
                        @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State)<br />
                        @Html.DisplayFor(modelItem => item.Zip)<br />
                        @Html.DisplayFor(modelItem => item.Country)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Email)<br />
                        @Html.DisplayFor(modelItem => item.Phone)
                    </p>
                </div>
            </a>
        }

        break;
    case "DJs":
        foreach (var item in Model)
        {
            <a href="@Url.Action($"Details", new { id = item.Id, type = item.VendorType })">
                <div class="autoElement02" align="center">
                    <p class="tinyText">
                        @Html.DisplayFor(modelItem => item.VendorType)
                    </p>
                    <p class="headerText">
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Street)<br />
                        @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State)<br />
                        @Html.DisplayFor(modelItem => item.Zip)<br />
                        @Html.DisplayFor(modelItem => item.Country)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Email)<br />
                        @Html.DisplayFor(modelItem => item.Phone)
                    </p>
                </div>
            </a>
        }


        break;
    case "Celebrants":
        foreach (var item in Model)
        {
            <a href="@Url.Action($"Details", new { id = item.Id, type = item.VendorType })">
                <div class="autoElement02" align="center">
                    <p class="tinyText">
                        @Html.DisplayFor(modelItem => item.VendorType)
                    </p>
                    <p class="headerText">
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Street)<br />
                        @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State)<br />
                        @Html.DisplayFor(modelItem => item.Zip)<br />
                        @Html.DisplayFor(modelItem => item.Country)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Email)<br />
                        @Html.DisplayFor(modelItem => item.Phone)
                    </p>
                </div>
            </a>
        }
        break;
    case "Photographers":
        foreach (var item in Model)
        {
            <a href="@Url.Action($"Details", new { id = item.Id, type = item.VendorType })">
                <div class="autoElement02" align="center">
                    <p class="tinyText">
                        @Html.DisplayFor(modelItem => item.VendorType)
                    </p>
                    <p class="headerText">
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Street)<br />
                        @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State)<br />
                        @Html.DisplayFor(modelItem => item.Zip)<br />
                        @Html.DisplayFor(modelItem => item.Country)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Email)<br />
                        @Html.DisplayFor(modelItem => item.Phone)
                    </p>
                </div>
            </a>
        }
        break;
    case "Caterers":
        foreach (var item in Model)
        {
            <a href="@Url.Action($"Details", new { id = item.Id, type = item.VendorType })">
                <div class="autoElement02" align="center">
                    <p class="tinyText">
                        @Html.DisplayFor(modelItem => item.VendorType)
                    </p>
                    <p class="headerText">
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Street)<br />
                        @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State)<br />
                        @Html.DisplayFor(modelItem => item.Zip)<br />
                        @Html.DisplayFor(modelItem => item.Country)
                    </p>
                    <p>
                        @Html.DisplayFor(modelItem => item.Email)<br />
                        @Html.DisplayFor(modelItem => item.Phone)
                    </p>
                </div>
            </a>
        }
        break;
    default:
        break;
}
@if (User.IsInRole("Couple") == true)
{
<div class="selectorHorizontal" align="center">
    <a href="@Url.Action($"Details","Couples")">
    <span class="possibleSelection">
        Back
    </span>
    </a>
</div>

    @*@Html.ActionLink("Back", "Details", "Couples", "", "")*@
}

