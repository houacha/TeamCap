@model WeddingPlannerApp.Models.CoupleViewModel

@{
    ViewBag.Title = "Create A Couple";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="autoElement01 form-group" align="center">
        <p class="headerText">Please Input The Names</p>
        <p class="headerText">Those to Be Wed:</p>
        <p>First Name:</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Partner1FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Partner1FirstName, "", new { @class = "text-danger" })
        </div>
        <p>Last Name:</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Partner1LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Partner1LastName, "", new { @class = "text-danger" })
        </div>
        <p class="headerText">&amp;</p>
        <p>First Name:</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Partner2FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Partner2FirstName, "", new { @class = "text-danger" })
        </div>
        <p>Last Name:</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Partner2LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Partner2LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="autoElement01 form-group" align="center">
        @Html.LabelFor(model => model.CoupleStreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CoupleStreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CoupleStreetAddress, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.CouplePhone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CouplePhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CouplePhone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="autoElement01 form-group" align="center">
        <p class="headerText">Wedding Budget:</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.WeddingBudget, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WeddingBudget, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="selectorHorizontal form-group" align="center">
        <span>
            <input type="submit" class="possibleSelection" color="white" value="Complete Registration" />
        </span>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
